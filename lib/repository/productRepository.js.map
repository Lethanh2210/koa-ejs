{"version":3,"file":"productRepository.js","names":["PAGINATE_SIZE","getAll","limit","sortType","result","products","sort","sortHandle","slice","remove","id","newProduct","filter","product","fs","writeFileSync","JSON","stringify","data","typeSort","a","b","Date","createAt","getOne","fields","productFound","find","arrayFields","split","pick","add","updateProduct","update","updateData","updatedProduct","updateProducts","map"],"sources":["../../src/repository/productRepository.js"],"sourcesContent":["import {data as products} from \"../database/products.json\";\r\nimport fs from \"fs\";\r\nimport {pick} from \"../service/productService\";\r\n\r\nconst PAGINATE_SIZE = 10\r\n\r\n/**\r\n *\r\n * @param {number} limit limit number of products to return\r\n * @param {string} sortType type of sort of products\r\n * @return {Array : products}\r\n */\r\nexport function getAll({limit = PAGINATE_SIZE, sortType = 'desc'} = {}) {\r\n    let result = products;\r\n    if (sortType) {\r\n        result = result.sort(sortHandle(sortType))\r\n    }\r\n    if (limit) {\r\n        result = result.slice(0,limit);\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n *\r\n * @param {string} id id of product want to remove or delete\r\n * @return {Object : product}\r\n */\r\nexport function remove(id) {\r\n    const newProduct = products.filter(product => product.id !== id);\r\n    fs.writeFileSync('./src/database/products.json', JSON.stringify({\r\n        data: newProduct\r\n    }));\r\n}\r\n\r\n/**\r\n * Currying\r\n * First class data type\r\n *\r\n * @param {String} typeSort type of sort\r\n * @return {any} Array sort by type\r\n */\r\nfunction sortHandle(typeSort) {\r\n    if (typeSort === \"desc\") {\r\n        return (a, b) => new Date(b.createAt) - new Date(a.createAt)\r\n    }\r\n\r\n    return (a, b) => new Date(a.createAt) - new Date(b.createAt)\r\n}\r\n\r\n// const sortHandle = (type) => {\r\n//     if (typeSort === \"desc\") {\r\n//         return (a, b) => new Date(b.createAt) - new Date(a.createAt)\r\n//     }\r\n//\r\n//     return (a, b) => new Date(a.createAt) - new Date(b.createAt)\r\n// }\r\n\r\n/**\r\n *\r\n * @param {string} id id of product want to find\r\n * @param {string} fields fields need to render\r\n * @return {Object }\r\n */\r\nexport function getOne({id, fields} = {}) {\r\n    const productFound = products.find(product => product.id === id);\r\n    if(fields){\r\n        const arrayFields = fields.split(',');\r\n        return pick(productFound, arrayFields);\r\n    }\r\n    return productFound;\r\n\r\n\r\n\r\n}\r\n\r\n/**\r\n * create a new product\r\n * @param {Object} product product be created or add\r\n */\r\nexport function add(product){\r\n    const updateProduct = [product, ...products];\r\n    fs.writeFileSync('./src/database/products.json', JSON.stringify({\r\n        data: updateProduct\r\n    }));\r\n}\r\n\r\n/**\r\n * update a product\r\n * @param {String} id id of product want to update\r\n * @param {Object} updatedProduct product be updated\r\n */\r\nexport function update({id, updateData : updatedProduct} = {}){\r\n    const updateProducts = products.map(product =>{\r\n        if(product.id === id){\r\n            return updatedProduct;\r\n        }\r\n        return product;\r\n    })\r\n    fs.writeFileSync('./src/database/products.json', JSON.stringify({\r\n        data: updateProducts\r\n    }));\r\n}\r\n"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;;;AAEA,MAAMA,aAAa,GAAG,EAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASC,MAAT,CAAgB;EAACC,KAAK,GAAGF,aAAT;EAAwBG,QAAQ,GAAG;AAAnC,IAA6C,EAA7D,EAAiE;EACpE,IAAIC,MAAM,GAAGC,cAAb;;EACA,IAAIF,QAAJ,EAAc;IACVC,MAAM,GAAGA,MAAM,CAACE,IAAP,CAAYC,UAAU,CAACJ,QAAD,CAAtB,CAAT;EACH;;EACD,IAAID,KAAJ,EAAW;IACPE,MAAM,GAAGA,MAAM,CAACI,KAAP,CAAa,CAAb,EAAeN,KAAf,CAAT;EACH;;EACD,OAAOE,MAAP;AACH;AAED;AACA;AACA;AACA;AACA;;;AACO,SAASK,MAAT,CAAgBC,EAAhB,EAAoB;EACvB,MAAMC,UAAU,GAAGN,cAAA,CAASO,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACH,EAAR,KAAeA,EAA1C,CAAnB;;EACAI,WAAA,CAAGC,aAAH,CAAiB,8BAAjB,EAAiDC,IAAI,CAACC,SAAL,CAAe;IAC5DC,IAAI,EAAEP;EADsD,CAAf,CAAjD;AAGH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASJ,UAAT,CAAoBY,QAApB,EAA8B;EAC1B,IAAIA,QAAQ,KAAK,MAAjB,EAAyB;IACrB,OAAO,CAACC,CAAD,EAAIC,CAAJ,KAAU,IAAIC,IAAJ,CAASD,CAAC,CAACE,QAAX,IAAuB,IAAID,IAAJ,CAASF,CAAC,CAACG,QAAX,CAAxC;EACH;;EAED,OAAO,CAACH,CAAD,EAAIC,CAAJ,KAAU,IAAIC,IAAJ,CAASF,CAAC,CAACG,QAAX,IAAuB,IAAID,IAAJ,CAASD,CAAC,CAACE,QAAX,CAAxC;AACH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASC,MAAT,CAAgB;EAACd,EAAD;EAAKe;AAAL,IAAe,EAA/B,EAAmC;EACtC,MAAMC,YAAY,GAAGrB,cAAA,CAASsB,IAAT,CAAcd,OAAO,IAAIA,OAAO,CAACH,EAAR,KAAeA,EAAxC,CAArB;;EACA,IAAGe,MAAH,EAAU;IACN,MAAMG,WAAW,GAAGH,MAAM,CAACI,KAAP,CAAa,GAAb,CAApB;IACA,OAAO,IAAAC,oBAAA,EAAKJ,YAAL,EAAmBE,WAAnB,CAAP;EACH;;EACD,OAAOF,YAAP;AAIH;AAED;AACA;AACA;AACA;;;AACO,SAASK,GAAT,CAAalB,OAAb,EAAqB;EACxB,MAAMmB,aAAa,GAAG,CAACnB,OAAD,EAAU,GAAGR,cAAb,CAAtB;;EACAS,WAAA,CAAGC,aAAH,CAAiB,8BAAjB,EAAiDC,IAAI,CAACC,SAAL,CAAe;IAC5DC,IAAI,EAAEc;EADsD,CAAf,CAAjD;AAGH;AAED;AACA;AACA;AACA;AACA;;;AACO,SAASC,MAAT,CAAgB;EAACvB,EAAD;EAAKwB,UAAU,EAAGC;AAAlB,IAAoC,EAApD,EAAuD;EAC1D,MAAMC,cAAc,GAAG/B,cAAA,CAASgC,GAAT,CAAaxB,OAAO,IAAG;IAC1C,IAAGA,OAAO,CAACH,EAAR,KAAeA,EAAlB,EAAqB;MACjB,OAAOyB,cAAP;IACH;;IACD,OAAOtB,OAAP;EACH,CALsB,CAAvB;;EAMAC,WAAA,CAAGC,aAAH,CAAiB,8BAAjB,EAAiDC,IAAI,CAACC,SAAL,CAAe;IAC5DC,IAAI,EAAEkB;EADsD,CAAf,CAAjD;AAGH"}